{"version":3,"file":"static/js/242.9e42d10f.chunk.js","mappings":"yOAqFA,UA1EiB,WAAO,IAAD,EACdA,GAAQC,EAAAA,EAAAA,KAAY,SAACD,GAAD,OAAWA,EAAME,mBAKrCC,GAAMC,EAAAA,EAAAA,MACZC,QAAQC,IAAIH,EAAII,SAAU,YAE1B,OAAwBC,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,YAA1B,eAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAa,WAChBD,GAAS,IAENE,EAAY,WACfJ,GAAQ,IAGX,OACG,gCACyC,YAArCV,EAAMe,oBAAoBC,QACxB,SAAC,IAAD,IACC,KACkB,YAArBhB,EAAMiB,YAAN,OAAkCjB,QAAlC,IAAkCA,GAAAA,EAAOkB,eACvC,SAAC,IAAD,CACGT,KAAMA,EACNU,QAAST,EACTU,SAAS,UACTC,QAAQ,gCAGX,SAAC,IAAD,CACGZ,KAAMA,EACNU,QAAST,EACTU,SAAS,UACTC,QAAQ,iCAGQ,UAArBrB,EAAMiB,YACJ,SAAC,IAAD,CAAUR,KAAMA,EAAMU,QAAST,EAASW,QAAQ,UAC/C,KAC2B,aAAzB,OAALrB,QAAK,IAALA,OAAA,EAAAA,EAAOsB,qBACL,SAAC,IAAD,CACGb,KAAME,EACNQ,QAASP,EACTQ,SAAS,UACTC,QAAQ,qCAEV,KAC2B,WAAzB,OAALrB,QAAK,IAALA,OAAA,EAAAA,EAAOsB,qBACL,SAAC,IAAD,CAAUb,KAAME,EAAOQ,QAASP,EAAUS,QAAQ,UACjD,MACJ,UAACE,EAAD,YACG,UAACC,EAAD,YACG,SAAC,IAAD,CAAaC,UAAUrB,EAAAA,EAAAA,SACvB,sCAAcJ,EAAMe,oBAAoBW,KAAxC,QACA,SAACC,EAAD,oBACI3B,EAAMe,oBAAoBa,aAD9B,aACI,EAAiCC,KAAI,SAACC,GAAD,OACnC,SAAC,IAAD,CACGC,KAAMD,EAAEC,KACRC,KAAMF,EAENrB,KAAMK,EACNH,MAAOE,GAFFiB,EAAEG,aAOnB,SAAC,IAAD,WAMZ,IAAMN,EAAcO,EAAAA,GAAAA,IAAH,+EAKXV,EAAcU,EAAAA,GAAAA,IAAH,kOAWXX,EAAYW,EAAAA,GAAAA,IAAH","sources":["pages/Favorite.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport ClientApartmentCard from '../components/ClientUserApartmentCard/ClientUserApartmentCard'\r\nimport Footer from '../components/footer/Footer'\r\nimport LoadingSpinner from '../components/LoadingSpinner'\r\nimport BreadCrumbs from '../components/UI/BreadCrumbs'\r\nimport SnackBar from '../components/UI/SnackBar'\r\n// import { getallFavoriteCards } from '../store/slices/LikeAndBookmarkSlice'\r\n\r\nconst Favorite = () => {\r\n   const store = useSelector((store) => store.likeandbookmark)\r\n   // const dispatch = useDispatch()\r\n   // useEffect(() => {\r\n   //    dispatch(getallFavoriteCards())\r\n   // }, [store?.postBookmarkstatus, store?.likeordislike])\r\n   const loc = useLocation()\r\n   console.log(loc.pathname, 'location')\r\n   // console.log(store?.getallFavoriteCards?.cards, 'card favorite')\r\n   const [open, setopen] = useState()\r\n   const [open2, setopen2] = useState()\r\n\r\n   const opensnack2 = () => {\r\n      setopen2(true)\r\n   }\r\n   const opensnack = () => {\r\n      setopen(true)\r\n   }\r\n   // console.log(open)\r\n   return (\r\n      <>\r\n         {store.getallFavoriteCards.status === 'pending' ? (\r\n            <LoadingSpinner />\r\n         ) : null}\r\n         {store.likestatus === 'success' && store?.likeordislike ? (\r\n            <SnackBar\r\n               open={open}\r\n               onClose={setopen}\r\n               severity=\"success\"\r\n               message=\"successfully added in like\"\r\n            />\r\n         ) : (\r\n            <SnackBar\r\n               open={open}\r\n               onClose={setopen}\r\n               severity=\"success\"\r\n               message=\"successfully deleted in like\"\r\n            />\r\n         )}\r\n         {store.likestatus === 'error' ? (\r\n            <SnackBar open={open} onClose={setopen} message=\"error\" />\r\n         ) : null}\r\n         {store?.postBookmarkstatus === 'success' ? (\r\n            <SnackBar\r\n               open={open2}\r\n               onClose={setopen2}\r\n               severity=\"success\"\r\n               message=\"successfully deleted on favorite\"\r\n            />\r\n         ) : null}\r\n         {store?.postBookmarkstatus === 'error' ? (\r\n            <SnackBar open={open2} onClose={setopen2} message=\"error\" />\r\n         ) : null}\r\n         <Container>\r\n            <WrapperPage>\r\n               <BreadCrumbs location={useLocation()} />\r\n               <p>Favorite ({store.getallFavoriteCards.size})</p>\r\n               <WrapperCard>\r\n                  {store.getallFavoriteCards.cards?.map((i) => (\r\n                     <ClientApartmentCard\r\n                        bool={i.bool}\r\n                        data={i}\r\n                        key={i.id}\r\n                        open={opensnack}\r\n                        open2={opensnack2}\r\n                     />\r\n                  ))}\r\n               </WrapperCard>\r\n            </WrapperPage>\r\n            <Footer />\r\n         </Container>\r\n      </>\r\n   )\r\n}\r\nexport default Favorite\r\nconst WrapperCard = styled.div`\r\n   display: flex;\r\n   gap: 20px;\r\n   flex-wrap: wrap;\r\n`\r\nconst WrapperPage = styled.div`\r\n   width: 1240px;\r\n   margin: 0 auto;\r\n   padding-top: 40px;\r\n   min-height: 380px;\r\n   & > :nth-child(2) {\r\n      margin-top: 40px;\r\n      margin-bottom: 30px;\r\n      text-transform: uppercase;\r\n   }\r\n`\r\nconst Container = styled.div`\r\n   background: #f7f7f7;\r\n   width: 100%;\r\n   & > :nth-child(2) {\r\n      margin-top: 150px;\r\n   }\r\n`\r\n"],"names":["store","useSelector","likeandbookmark","loc","useLocation","console","log","pathname","useState","open","setopen","open2","setopen2","opensnack2","opensnack","getallFavoriteCards","status","likestatus","likeordislike","onClose","severity","message","postBookmarkstatus","Container","WrapperPage","location","size","WrapperCard","cards","map","i","bool","data","id","styled"],"sourceRoot":""}